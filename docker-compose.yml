---

version: '3.1'

networks:
  app-tier:
    driver: bridge

services:
  mongodb:
    image: mongo:4.0.13
    container_name: mongodb
    restart: always
    environment:
      - TZ=${TIMEZONE}
      - MONGO_INITDB_DATABASE=mern_stack
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=ifjMCRIaeJArKcy
    volumes:
      - ./database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./database/mongo-volume:/data/db
    ports:
      - "27017-27019:27017-27019"
    networks:
      - app-tier

  backend:
    build: ./node-backend/docker/
    container_name: backend
    restart: always
    environment:
      - 'TZ=${TIMEZONE}'
    ports:
      - "6200:6200"
    volumes:
      - ./node-backend:/app:rw
    depends_on:
      - mongodb
    networks:
      - app-tier

  frontend:
    build: ./react-frontend/docker/
    container_name: frontend
    restart: always
    environment:
      - 'TZ=${TIMEZONE}'
    expose:
      - '3000'
    volumes:
      - ./react-frontend:/app:rw
    depends_on:
      - backend
    networks:
      - app-tier

  httpd:
    container_name: nginx
    image: bitnami/nginx:${NGINX_VERSION}-${OS_VERSION}
    user: root:root
    restart: always
    environment:
      - 'TZ=${TIMEZONE}'
    depends_on:
      - frontend
    networks:
      - app-tier
    ports:
      - '80:8080'
      - '443:8443'
    volumes:
      - ./config/nginx/nginx.conf:/opt/bitnami/nginx/conf/nginx.conf:rw
      - ./config/nginx/vhost/app.conf:/opt/bitnami/nginx/conf/vhosts/app.conf:rw
      - ./logs/nginx/${NGINX_VERSION}:/opt/bitnami/nginx/logs:rw  
  
  
